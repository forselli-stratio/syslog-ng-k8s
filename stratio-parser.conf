block parser p_stratio_header(prefix("stratio.") template("${MESSAGE}")) {
    csv-parser(
        prefix(`prefix`)
        dialect(escape-double-char)
        flags(strip-whitespace, greedy)
        template(`template`)
        quote-pairs('[]')
        delimiters("|")
        columns("h_timestamp", "h_mesos_agent_ip", "h_container_ip",
                "h_tenant_id", "h_service_id",
                "h_service_name", "h_task_name",
                "h_task_id", "h_framework_id",
                "h_sdata", "raw_message")
    );
};

block parser p_stratio_sdata(prefix("stratio.")) {
  channel {
    filter {
      match(
        ".*"
        value("`prefix`h_sdata")
        flags("utf8")
      );
    };
    parser {
      csv-parser(
        prefix(`prefix`)
        template("${`prefix`h_sdata}")
        delimiters("\"")
        dialect(escape-none)
        flags(strip-whitespace, greedy)
        columns("", "s_source", "", "s_file", "", "s_role", "")
      );
    };
  };
};

@define stratio.compliant_regex '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}((.|,)\\d{3})?((\\+|-)\\d{2}:?\\d{2}|Z) (FATAL|ERROR|WARN|WARNING|NOTICE|INFO|DEBUG|TRACE|AUDIT) (-|[\\w|\\-|.|@]+) (-|0|1) ([0-9A-Za-z\/\\.\\-_\\$:]+) ([0-9A-Za-z\/\\.\\-_\\$:-\\[\\]]+)(:\\d+)? .*$'

block parser p_stratio_message(prefix("stratio.")) {
  channel {
    filter {
      match(
        "`stratio.compliant_regex`"
        value("`prefix`raw_message")
        flags("utf8")
      );
    };
    parser {
      csv-parser(
        prefix(`prefix`)
        template("${`prefix`raw_message}")
        delimiters(" ")
        dialect(escape-none)
        flags(strip-whitespace, greedy)
        columns("m_timestamp", "m_loglevel", "m_user",
                "m_audit", "m_proc", "m_class", "m_MSG")
      );
    };
  };
};
