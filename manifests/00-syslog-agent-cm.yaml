apiVersion: v1
kind: ConfigMap
metadata:
  name: syslog-agent-config
  namespace: default
data:
  syslog-ng.conf: |
    @version: 3.20
    
    options {
        chain_hostnames(off);
        use-dns(no);
        use-fqdn(no);
        perm(0640);
        stats_freq(0);
        bad-hostname("^gconfd$");
        flush-lines(100);
        log-fifo-size(150000);
    };
    
    ########################
    # Filters
    ########################
    # Here's come the filter options. With this rules, we can set which
    # message go where.
    
    filter f_dbg { level(debug); };
    filter f_info { level(info); };
    filter f_notice { level(notice); };
    filter f_warn { level(warn); };
    filter f_err { level(err); };
    filter f_crit { level(crit .. emerg); };
    
    filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
    filter f_error { level(err .. emerg) ; };
    filter f_messages { level(info,notice,warn) and
                        not facility(auth,authpriv,cron,daemon,mail,news); };
    
    filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
    filter f_cron { facility(cron) and not filter(f_debug); };
    filter f_daemon { facility(daemon) and not filter(f_debug); };
    filter f_kern { facility(kern) and not filter(f_debug); };
    filter f_lpr { facility(lpr) and not filter(f_debug); };
    filter f_local { facility(local0, local1, local3, local4, local5,
                            local6, local7) and not filter(f_debug); };
    filter f_mail { facility(mail) and not filter(f_debug); };
    filter f_news { facility(news) and not filter(f_debug); };
    filter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug); };
    filter f_user { facility(user) and not filter(f_debug); };
    
    ###
    # Sources
    ###
    source s_dir { wildcard-file(
        base-dir("/var/log/containers")
        filename-pattern("*logger*.log")
        max-files(1500)
        follow-freq(0.5)
        monitor-method(poll)
        log-fetch-limit(100)
        log-iw-size(15000)
        flags(no-parse)
        recursive(yes)
        multi-line-mode(indented)
    ); };    
    destination d_syslog_tcp {
        network(
            "syslog-relay.default.svc.k8s.test.stratio.int"
            transport("tcp")
            port(7601)
            template("${ISODATE}|$(indent-multi-line ${MESSAGE})\n")
            template-escape(no)
            disk-buffer(
                mem-buf-size(200M)
                disk-buf-size(500M)
                reliable(yes)
                dir("/var/syslog-ng")
            )
        );
    }; 
    
    ###
    # Rewrites
    ###
    
    rewrite escape {
        subst("\n","\\n", value("MESSAGE"), flags("global"));
    };
    
    ###
    # Log-Routing
    ###
         
    log {
        source(s_dir); 
        rewrite(escape);
        destination(d_syslog_tcp);
      flags(flow-control, final);
    };